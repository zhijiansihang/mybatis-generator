package {{package}};

{{#imports}}import {{import}};
{{/imports}}

import {{servicePackage}}.{{classname}}Service;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

{{#useBeanValidation}}
import javax.validation.constraints.*;
import javax.validation.Valid;
{{/useBeanValidation}}
import java.util.List;

@RestController
{{#operations}}
public class {{classname}}Controller extends BaseController{

    private static final Logger logger = LoggerFactory.getLogger({{classname}}Controller.class);

    @Autowired
    private {{classname}}Service {{classVarName}}Service;
{{#operation}}

    /**
     * {{summary}}
     * {{#allParams}}
     * @param {{paramName}}{{/allParams}}
     * @return
     */
    @RequestMapping(value = "{{{path}}}",{{#singleContentTypes}}{{#hasProduces}}
        produces = "{{{vendorExtensions.x-accepts}}}", {{/hasProduces}}{{#hasConsumes}}
        consumes = "{{{vendorExtensions.x-contentType}}}",{{/hasConsumes}}{{/singleContentTypes}}{{^singleContentTypes}}{{#hasProduces}}
        produces = { {{#produces}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/produces}} }, {{/hasProduces}}{{#hasConsumes}}
        consumes = { {{#consumes}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/consumes}} },{{/hasConsumes}}{{/singleContentTypes}}
        method = RequestMethod.{{httpMethod}})
    public {{>returnTypes}} {{operationId}}({{#allParams}}{{>queryParams}}{{>pathParams}}{{>headerParams}}{{>bodyParams}}{{>formParams}}{{#hasMore}},{{/hasMore}}{{/allParams}}) {

        logRequest("{{operationId}}" {{#hasParams}}, {{#allParams}}"{{paramName}}", {{paramName}} {{#hasMore}}, {{/hasMore}}{{/allParams}}{{/hasParams}});

        {{>returnTypes}} response = {{classVarName}}Service.{{operationId}}({{#allParams}}{{paramName}}{{#hasMore}} ,{{/hasMore}}{{/allParams}});

        logResponse("{{operationId}}", response);

        return response;

    }
{{/operation}}
}
{{/operations}}
